#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ Streamlit
"""

import pandas as pd
import numpy as np
from datetime import datetime, timedelta
import json

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –º–æ–¥—É–ª—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
from multi_store_architecture import MultiStoreForecastManager

def test_forecast_system():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üå∏ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä
    try:
        manager = MultiStoreForecastManager()
        print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –æ–¥–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
    try:
        store_forecast = manager.get_store_forecast('almaty_1', 7)
        print(f"‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ –ê–ª–º–∞—Ç—ã –¶–£–ú —Å–æ–∑–¥–∞–Ω: {len(store_forecast)} –∑–∞–ø–∏—Å–µ–π")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
        print("\nüìä –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–≥–Ω–æ–∑–∞:")
        print(store_forecast.head(3).to_string(index=False))
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è –≤—Å–µ–π —Å–µ—Ç–∏
    try:
        network_forecast = manager.get_network_forecast(5)
        print(f"\n‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è —Å–µ—Ç–∏ —Å–æ–∑–¥–∞–Ω: {len(network_forecast)} –∑–∞–ø–∏—Å–µ–π")
        
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º
        store_summary = network_forecast.groupby('–ú–∞–≥–∞–∑–∏–Ω').agg({
            '–ü—Ä–æ–≥–Ω–æ–∑_—Å–ø—Ä–æ—Å–∞': 'sum',
            '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è_–∑–∞–∫—É–ø–∫–∏': 'sum'
        }).round(0)
        
        print("\nüìà –°–≤–æ–¥–∫–∞ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º:")
        print(store_summary.to_string())
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ç–µ–≤–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—é
    try:
        consolidation = manager.get_consolidation_opportunities(network_forecast)
        print(f"\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω: {len(consolidation)} –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π")
        
        if consolidation:
            for date, data in list(consolidation.items())[:2]:
                print(f"\n–î–∞—Ç–∞: {date}")
                print(f"  –û–±—â–∏–π –æ–±—ä–µ–º: {data['total_volume']}")
                print(f"  –í–æ–∑–º–æ–∂–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è: {data['potential_savings']:.0f} —Ç–µ–Ω–≥–µ")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏–∏: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç—Ä–∏–∫–∏
    try:
        metrics = manager.get_performance_metrics()
        print(f"\n‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω—ã")
        print(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–≥–∞–∑–∏–Ω–æ–≤: {metrics['total_stores']}")
        print(f"–¢–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≥–Ω–æ–∑–∞ —Å–µ—Ç–∏: {metrics['network_forecast_accuracy']:.1%}")
        print(f"–û–±—â–∏–π –¥–Ω–µ–≤–Ω–æ–π —Å–ø—Ä–æ—Å: {metrics['total_daily_demand']}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
    try:
        new_store_config = {
            "name": "–ê–ª–º–∞—Ç—ã –¢–µ—Å—Ç",
            "address": "—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 1",
            "type": "mass_market",
            "size_category": "medium",
            "target_audience": "local_customers",
            "avg_daily_visitors": 120
        }
        
        success = manager.add_new_store('almaty_test', new_store_config)
        if success:
            print("‚úÖ –ù–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–∞: {e}")
        return False
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìã –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ:")
    print("  - –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("  - –ú—É–ª—å—Ç–∏–º–∞–≥–∞–∑–∏–Ω–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç")
    print("  - –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è –∑–∞–∫—É–ø–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∞")
    print("  - –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
    print("  - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")
    
    return True

if __name__ == "__main__":
    test_forecast_system()