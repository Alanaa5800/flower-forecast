#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–≤–µ—Ç–æ–≤
"""

import json
import os

def test_connection_simple():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    
    print("üîê –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ –∫–ª—é—á–µ–π
    key_file = "service_account_key.json"
    
    if os.path.exists(key_file):
        print(f"‚úÖ –§–∞–π–ª –∫–ª—é—á–µ–π –Ω–∞–π–¥–µ–Ω: {key_file}")
        
        try:
            with open(key_file, 'r') as f:
                key_data = json.load(f)
                
            required_fields = [
                'type', 'project_id', 'private_key_id', 'private_key',
                'client_email', 'client_id', 'auth_uri', 'token_uri'
            ]
            
            missing_fields = []
            for field in required_fields:
                if field not in key_data:
                    missing_fields.append(field)
            
            if missing_fields:
                print(f"‚ùå –í —Ñ–∞–π–ª–µ –∫–ª—é—á–µ–π –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing_fields}")
                return False
            else:
                print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–∞ –∫–ª—é—á–µ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
                print(f"üìß Email —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: {key_data['client_email']}")
                print(f"üèóÔ∏è –ü—Ä–æ–µ–∫—Ç: {key_data['project_id']}")
                
        except json.JSONDecodeError:
            print("‚ùå –§–∞–π–ª –∫–ª—é—á–µ–π –ø–æ–≤—Ä–µ–∂–¥–µ–Ω (–Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON)")
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –∫–ª—é—á–µ–π: {e}")
            return False
            
    else:
        print(f"‚ùå –§–∞–π–ª –∫–ª—é—á–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω: {key_file}")
        print("\nüìù –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∫–ª—é—á–µ–π:")
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Google Cloud Console")
        print("2. –°–æ–∑–¥–∞–π—Ç–µ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç")
        print("3. –°–∫–∞—á–∞–π—Ç–µ JSON –∫–ª—é—á")
        print("4. –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –≤ 'service_account_key.json'")
        print("5. –ü–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
    required_files = [
        'streamlit_forecast_app.py',
        'google_sheets_integration.py',
        'multi_store_architecture.py'
    ]
    
    for file in required_files:
        if os.path.exists(file):
            print(f"‚úÖ {file}")
        else:
            print(f"‚ùå {file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print("-" * 50)
    print("1. –°–æ–∑–¥–∞–π—Ç–µ Google –¢–∞–±–ª–∏—Ü—É —Å –ª–∏—Å—Ç–∞–º–∏:")
    print("   - –ü—Ä–æ–¥–∞–∂–∏")
    print("   - –û—Å—Ç–∞—Ç–∫–∏") 
    print("   - –ü—Ä–æ–≥–Ω–æ–∑")
    print("   - –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏")
    print()
    print("2. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Ç–∞–±–ª–∏—Ü–µ–π —Å —Å–µ—Ä–≤–∏—Å–Ω—ã–º –∞–∫–∫–∞—É–Ω—Ç–æ–º:")
    if os.path.exists(key_file):
        try:
            with open(key_file, 'r') as f:
                key_data = json.load(f)
            print(f"   Email: {key_data['client_email']}")
        except:
            print("   Email: [–∏–∑ —Ñ–∞–π–ª–∞ service_account_key.json]")
    print("   –ü—Ä–∞–≤–∞: –†–µ–¥–∞–∫—Ç–æ—Ä")
    print()
    print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL —Ç–∞–±–ª–∏—Ü—ã")
    print("4. –û–±–Ω–æ–≤–∏—Ç–µ SPREADSHEET_URL –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print()
    print("5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º:")
    print("   python3 test_real_connection.py")
    
    return True

def create_real_connection_test():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    
    test_code = '''#!/usr/bin/env python3
"""
–†–µ–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets
–¢—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö gspread –∏ google-auth
"""

try:
    import gspread
    from google.oauth2.service_account import Credentials
    
    # –ù–ê–°–¢–†–û–ô–¢–ï –≠–¢–ò –ü–ê–†–ê–ú–ï–¢–†–´:
    CREDENTIALS_PATH = "service_account_key.json"
    SPREADSHEET_URL = "–í–°–¢–ê–í–¨–¢–ï_–°–Æ–î–ê_URL_–í–ê–®–ï–ô_–¢–ê–ë–õ–ò–¶–´"
    
    def test_real_connection():
        print("üîó –¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets")
        print("=" * 50)
        
        if SPREADSHEET_URL == "–í–°–¢–ê–í–¨–¢–ï_–°–Æ–î–ê_URL_–í–ê–®–ï–ô_–¢–ê–ë–õ–ò–¶–´":
            print("‚ùå –û–±–Ω–æ–≤–∏—Ç–µ SPREADSHEET_URL –≤ —Ñ–∞–π–ª–µ")
            return False
        
        try:
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            scope = ['https://spreadsheets.google.com/feeds',
                    'https://www.googleapis.com/auth/drive']
            
            creds = Credentials.from_service_account_file(
                CREDENTIALS_PATH, scopes=scope
            )
            
            gc = gspread.authorize(creds)
            sheet = gc.open_by_url(SPREADSHEET_URL)
            
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìä –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: {sheet.title}")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Å—Ç–æ–≤
            worksheets = sheet.worksheets()
            print(f"üìÑ –ù–∞–π–¥–µ–Ω–æ –ª–∏—Å—Ç–æ–≤: {len(worksheets)}")
            
            required_sheets = ['–ü—Ä–æ–¥–∞–∂–∏', '–û—Å—Ç–∞—Ç–∫–∏', '–ü—Ä–æ–≥–Ω–æ–∑', '–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏']
            existing_sheets = [ws.title for ws in worksheets]
            
            for sheet_name in required_sheets:
                if sheet_name in existing_sheets:
                    print(f"  ‚úÖ {sheet_name}")
                else:
                    print(f"  ‚ùå {sheet_name} - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
            # –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏
            try:
                test_sheet = sheet.worksheet('–ü—Ä–æ–≥–Ω–æ–∑')
                test_sheet.update('A1', '–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è')
                print("‚úÖ –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏ —É—Å–ø–µ—à–µ–Ω")
                
                # –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è
                value = test_sheet.acell('A1').value
                print(f"‚úÖ –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è —É—Å–ø–µ—à–µ–Ω: {value}")
                
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–µ –∑–∞–ø–∏—Å–∏/—á—Ç–µ–Ω–∏—è: {e}")
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            print("\\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
            print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL —Ç–∞–±–ª–∏—Ü—ã")
            print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü—É")
            print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (–†–µ–¥–∞–∫—Ç–æ—Ä)")
            print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API –≤–∫–ª—é—á–µ–Ω—ã –≤ Google Cloud")
            return False
    
    if __name__ == "__main__":
        test_real_connection()
        
except ImportError:
    print("‚ùå –ú–æ–¥—É–ª–∏ gspread –∏–ª–∏ google-auth –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π:")
    print("pip install gspread google-auth")
'''
    
    with open('test_real_connection.py', 'w', encoding='utf-8') as f:
        f.write(test_code)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: test_real_connection.py")

if __name__ == "__main__":
    success = test_connection_simple()
    
    if success:
        create_real_connection_test()
        print(f"\nüéØ –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞!")
        print("üìÅ –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Google –¢–∞–±–ª–∏—Ü—É –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ test_real_connection.py")